name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: todo_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client
      
      - name: Wait for PostgreSQL to be Ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U postgres && break
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      # - name: Set up PostgreSQL
      #   run: |
      #     sudo systemctl start postgresql
      #     psql -U postgres -c "CREATE DATABASE todo_db;"
      #     psql -U postgres -c "CREATE USER todo_user WITH ENCRYPTED PASSWORD 'todo_password';"
      #     psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE todo_db TO todo_user;"
          
      - name: Create Additional User & Grant Privileges
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'todo_db'" | grep -q 1 || \
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE todo_db;"
          PGPASSWORD=postgres psql -h localhost -U postgres -d todo_db -c "CREATE USER todo_user WITH ENCRYPTED PASSWORD 'todo_password';"
          PGPASSWORD=postgres psql -h localhost -U postgres -d todo_db -c "GRANT ALL PRIVILEGES ON DATABASE todo_db TO todo_user;"

      - name: Remove and Reinstall Maven Dependencies
        run: |
          cd backend
          rm -rf ~/.m2/repository
          mvn clean install -U -DskipTests

      - name: Verify JUnit Exists
        run: mvn dependency:tree | grep "junit"

      - name: Compile Tests
        run: mvn test-compile

      - name: Run Tests
        run: mvn test

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: backend/target/site/jacoco
