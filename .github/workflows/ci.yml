name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client
    
    - name: Create Additional User & Grant Privileges
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d todo_db -c "CREATE USER todo_user WITH ENCRYPTED PASSWORD 'todo_password';"
          PGPASSWORD=postgres psql -h localhost -U postgres -d todo_db -c "GRANT ALL PRIVILEGES ON DATABASE todo_db TO todo_user;"

    - name: Set up PostgreSQL
      run: |
        sudo systemctl start postgresql
        psql -U postgres -c "CREATE DATABASE todo_db;"
        psql -U postgres -c "CREATE USER todo_user WITH ENCRYPTED PASSWORD 'todo_password';"
        psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE todo_db TO todo_user;"

    - name: Build and Test Backend
      run: |
        cd backend
        mvn clean install
        mvn test
        mvn jacoco:report

    - name: Upload JaCoCo Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: backend/target/site/jacoco

  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: |
        cd frontend
        npm install

    - name: Run Tests
      run: |
        cd frontend
        npm test

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

  dockerize:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Backend Docker Image
      run: |
        cd backend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest .

    - name: Push Backend Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest

    - name: Build Frontend Docker Image
      run: |
        cd frontend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest .

    - name: Push Frontend Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest
